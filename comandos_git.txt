Documentos de comandos de git que estara en git si o no.

Trabajo local:
    git init: inicializa el repositorio

    git add: a침adir un archio a staging

    git commit: mandar el archivo al repositorio local

    git restore --staged <archivo> : sacar del area de staged

Visualizaci칩n:
    git status: estado en general

    git log: historial de cambios | --stat: con detalles
    --all --graph --decorate --oneline (visualizacion completa)

    git show <archivo>: muestra los cambios hechos en el ultimo commit

    git diff: muestra diferencias entre los que estan en staging y los que no se han a침adidi

    git diff <#commit1> <#commit2>: diferencias entre dos versiones de commits

Modificacion:
    git reset <#commit>: vuelve al archio de ese commit | --soft: sin borrar los commits anteriores --hard: todo parejo

    git checkout <#commit> <archivo>: vuelve un archivo a la version del commit indicada sin cambiar nada en el staging
    (si se hace commit si se modificara el archivo)

        git checkout master : vuelve el archivo a la ultima version encontrada antes de hacer el checkout

Ramas: 
la rama se creara desde el lugar en donde estas ubicado en git

    git branch <nombre_branch>: crea una nueva rama con el nombre especificado

    git checkout <rama>: cambia a la rama especificada

    git merge <rama>: fusiona la rama y a침ade al historial de commits el merge de la rama en la que se encuentra

Remoto:
    1:
        git remote add origin <url> : Conecta el repositorio local con uno remoto

        git remote -v: lista las url para hacer fetch y push

    2:
        git pull origin master: Traer los cambios del rpositorio remoto y los fusiona con la rama master del repositorio local

        git pull origin master --allow-unrelated-histories: Obliga a fusionar la rama del repositorio remoto con el local (Normalmente primera vez)

    3:
        git push origin master: enviar la rama master al repositorio remoto
    
    git remote remove origin: elimina la conexion con el repositorio remoto

Tags:
    git tag -a <v0.1> -m "mensaje" <hash>: Crea un nuevo tag

    git tag: Muestra los tags que existen

    git show-ref --tags: muestra los tags y los el commit asociado

    git push origin --tags: mandar los tags al remoto
    
    git tag -d <nombre_tag>: eliminar un tag

    git push origin :refs/tgs/<nombre_tag>: eliminar un tag del remoto